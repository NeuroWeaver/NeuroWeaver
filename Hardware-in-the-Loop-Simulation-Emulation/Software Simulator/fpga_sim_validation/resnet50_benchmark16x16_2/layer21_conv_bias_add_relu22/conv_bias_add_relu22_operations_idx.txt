// CODELET:	conv_bias_add_relu22
inputs=data['N', 'IH', 'IW', 'IC'], weight['KH', 'KW', 'IC', 'OC'], bias['OC'], add_lhs['N', 'OH', 'OW', 'OC']
intermediates=param['SIMD_SIZE'], add_out['N', 'OH', 'OW', 'OC'], conv_out['N', 'OH', 'OW', 'OC'], m0['SIMD_SIZE'], nshift['SIMD_SIZE']
outputs=out['N', 'OH', 'OW', 'OC']
0	config0: start-systolic_array
1	config1: start-WBUF
2	config2: start-BBUF
3	config3: start-IBUF
4	config4: start-OBUF
5	(OC)loop0[0]: START=0; STOP=512; STRIDE=64; OFFSET:0
6		transfer1: OPERAND: bias[DRAM->BBUF], SIZES: [[512], [64]]
7		(N)loop1[1]: START=0; STOP=1; STRIDE=1; OFFSET:0
8			(IC)loop2[2]: START=0; STOP=128; STRIDE=128; OFFSET:0
9				(KH)loop3[3]: START=0; STOP=1; STRIDE=1; OFFSET:0
10					(KW)loop4[4]: START=0; STOP=1; STRIDE=1; OFFSET:0
11						transfer0: OPERAND: weight[DRAM->WBUF], SIZES: [[1, 1, 128, 512], [1, 1, 128, 64]]
12						(OH)loop5[5]: START=0; STOP=28; STRIDE=28; OFFSET:0
13							(OW)loop6[6]: START=0; STOP=28; STRIDE=4; OFFSET:0
14								transfer3: OPERAND: conv_out[DRAM->OBUF], SIZES: [[1, 28, 28, 512], [1, 28, 4, 64]]
15								transfer2: OPERAND: data[DRAM->IBUF], SIZES: [[1, 28, 28, 128], [1, 28, 4, 128]]
16								(OC)loop11[7]: START=0; STOP=64; STRIDE=1; OFFSET:0
17									(N)loop12[8]: START=0; STOP=1; STRIDE=1; OFFSET:0
18										(IC)loop13[9]: START=0; STOP=128; STRIDE=1; OFFSET:0
19											(KH)loop14[10]: START=0; STOP=1; STRIDE=1; OFFSET:0
20												(KW)loop15[11]: START=0; STOP=1; STRIDE=1; OFFSET:0
21													(OH)loop16[12]: START=0; STOP=28; STRIDE=1; OFFSET:0
22														(OW)loop17[13]: START=0; STOP=4; STRIDE=1; OFFSET:0
23															compute0: pe_array-MVMUL(['data', 'weight', 'bias', 'conv_out'])->['conv_out']
24														loop17: END
25													loop16: END
26												loop15: END
27											loop14: END
28										loop13: END
29									loop12: END
30								loop11: END
31							loop6: END
32						loop5: END
33					loop4: END
34				loop3: END
35			loop2: END
36		loop1: END
37	loop0: END
38	config5: end-WBUF
39	config6: end-BBUF
40	config7: end-IBUF
41	config8: end-OBUF
42	config9: end-systolic_array
43	config10: start-SIMD
44	config11: start-IMM
45	config12: start-IMM
46	config13: start-IMM
47	(OC)loop7[0]: START=0; STOP=512; STRIDE=64; OFFSET:0
48		(N)loop8[1]: START=0; STOP=1; STRIDE=1; OFFSET:0
49			(OH)loop9[2]: START=0; STOP=28; STRIDE=28; OFFSET:0
50				(OW)loop10[3]: START=0; STOP=28; STRIDE=4; OFFSET:0
51					transfer4: OPERAND: add_lhs[DRAM->VMEM1], SIZES: [[1, 28, 28, 512], [1, 28, 4, 64]]
52					(OC)loop18[4]: START=0; STOP=64; STRIDE=1; OFFSET:0
53						(N)loop19[5]: START=0; STOP=1; STRIDE=1; OFFSET:0
54							(OH)loop20[6]: START=0; STOP=28; STRIDE=1; OFFSET:0
55								(OW)loop21[7]: START=0; STOP=4; STRIDE=1; OFFSET:0
56									compute1: SIMD-ADD(['add_lhs', 'conv_out'])->['add_out']
57									compute2: SIMD-RELU(['add_out', 'param'])->['out']
58								loop21: END
59							loop20: END
60						loop19: END
61					loop18: END
62					transfer5: OPERAND: out[VMEM1->DRAM], SIZES: [[1, 28, 4, 64], [1, 28, 28, 512]]
63				loop10: END
64			loop9: END
65		loop8: END
66	loop7: END
67	config14: end-SIMD
